.TH "SAlimentations" 3 "Jeudi Mai 18 2017" "Alimentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SAlimentations \- 
.SH SYNOPSIS
.br
.PP
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSAlimentations\fP ()"
.br
.RI "\fIConstructeur de la classe \fBSAlimentations\fP\&. \fP"
.ti -1c
.RI "T1DStringArray \fBSepareTab\fP (AnsiString Str_i, AnsiString Separateur_i)"
.br
.RI "\fISeparation de la chaine de caractere en fonction du separateur souhaité\&. \fP"
.ti -1c
.RI "void \fBReadBenchAdrFile\fP ()"
.br
.RI "\fILecture de la configuration de l'instrument dans le ficheir de configuration\&. \fP"
.ti -1c
.RI "double \fBGetMeasure\fP (AnsiString ACommand)"
.br
.ti -1c
.RI "void \fBDescriptSimInstr\fP (\fBvirtual_alimentation_C\fP *alim)"
.br
.RI "\fIDescription de l'Alimentation \&. \fP"
.in -1c
.SS "Attributs publics"

.in +1c
.ti -1c
.RI "__property bool \fBActive\fP = {read = FActive, write = \fBSetActive\fP}"
.br
.RI "\fIpropriété Active de la variable FActive\&. \fP"
.ti -1c
.RI "__property AnsiString \fBCaption\fP = {read = \fBgetCaption\fP, write = \fBsetCaption\fP}"
.br
.RI "\fIpropriété Caption de la variable FCaption\&. \fP"
.ti -1c
.RI "__property AnsiString \fBNameDevice\fP = {read = FNameDevice, write = \fBSetDeviceFind\fP}"
.br
.RI "\fIpropriété NameDevice de la variable NameDevice\&. \fP"
.ti -1c
.RI "__property AnsiString \fBAdresseString\fP = {read = FAdresseString, write = FAdresseString}"
.br
.RI "\fIpropriété AdresseString de la variable FAdresseString\&. \fP"
.ti -1c
.RI "__property \fBvirtual_alimentation_C\fP * \fBDevice\fP = {read=FDevice, write=FDevice}"
.br
.RI "\fIpropriété Device de la variable FDevice\&. \fP"
.ti -1c
.RI "__property SAlimEnum \fBDeviceType\fP = {read=FDeviceType, write=\fBSetDeviceType\fP}"
.br
.RI "\fIpropriété DeviceType de la variable FDeviceType\&. \fP"
.ti -1c
.RI "__property SBenchAdrComp * \fBBenchAdrFile\fP = {read = FBenchAdrFile_m, write = FBenchAdrFile_m}"
.br
.RI "\fIpropriété BenchAdrFile de la variable FBenchAdrFile_m\&. \fP"
.ti -1c
.RI "__property GpibInterface * \fBGPIB\fP = {read = FGPIB_m, write = FGPIB_m}"
.br
.RI "\fIpropriété GPIB de la variable FGPIB_m\&. \fP"
.in -1c
.SS "Fonctions membres protégées"

.in +1c
.ti -1c
.RI "void \fBSetActive\fP (bool AValue)"
.br
.RI "\fIActive ou Deactive le composant SAlimentation\&. \fP"
.ti -1c
.RI "void \fBSetDeviceFind\fP (AnsiString AValue)"
.br
.RI "\fIRecherche et Inialisation du type de driver simulé\&. \fP"
.ti -1c
.RI "void \fBSetDeviceType\fP (SAlimEnum AValue)"
.br
.RI "\fIRecherche et Initialisation du type de driver simulé en fonction de la Liste des instruments d'alimentation possible de simulés\&. \fP"
.ti -1c
.RI "void \fBsetCaption\fP (AnsiString AValue)"
.br
.RI "\fIRenseigne le Alias du driver simulé\&. \fP"
.ti -1c
.RI "AnsiString \fBgetCaption\fP ()"
.br
.RI "\fI\&.Retourne l'Alias du driver simulé\&. \fP"
.ti -1c
.RI "void \fBsetAdresseString\fP (AnsiString AValue)"
.br
.RI "\fI\&.Renseigne la chaine complete de l'adresse du driver simulé\&. \fP"
.ti -1c
.RI "AnsiString \fBgetAdresseString\fP ()"
.br
.RI "\fI\&.Retourne la chaine complete de l'adresse du driver simulé\&. / \fP"
.ti -1c
.RI "AnsiString \fBgetNameDevice\fP ()"
.br
.RI "\fIRetourne le Nom du Driver simulé\&. \fP"
.ti -1c
.RI "T1DStringArray \fBSepareAdressGpib\fP (AnsiString Str_i)"
.br
.RI "\fIRenseigne les differents parametres de l'adresse GPIB /\&. \fP"
.in -1c
.SS "Attributs protégés"

.in +1c
.ti -1c
.RI "\fBvirtual_alimentation_C\fP * \fBFDevice\fP"
.br
.ti -1c
.RI "GpibInterface * \fBFGPIB_m\fP"
.br
.ti -1c
.RI "SAlimEnum \fBFDeviceType\fP"
.br
.ti -1c
.RI "AnsiString \fBFDeviceStr\fP"
.br
.ti -1c
.RI "AnsiString \fBFCaption\fP"
.br
.ti -1c
.RI "AnsiString \fBFAdresseString\fP"
.br
.ti -1c
.RI "AnsiString \fBFNameDevice\fP"
.br
.ti -1c
.RI "SBenchAdrComp * \fBFBenchAdrFile_m\fP"
.br
.ti -1c
.RI "bool \fBFActive\fP"
.br
.in -1c
.SH "Documentation des fonctions membres"
.PP 
.SS "AnsiString \fBSAlimentations::getAdresseString\fP ()\fC [protected]\fP"

.PP
\&.Retourne la chaine complete de l'adresse du driver simulé\&. / \fBRenvoie:\fP
.RS 4
AnsiString AValue : chaine complete de l'adresse du driver simulé\&. 
.RE
.PP

.SS "AnsiString \fBSAlimentations::getCaption\fP ()\fC [protected]\fP"

.PP
\&.Retourne l'Alias du driver simulé\&. \fBRenvoie:\fP
.RS 4
AnsiString AValue : Alias du drievr simulé\&. 
.RE
.PP

.SS "AnsiString \fBSAlimentations::getNameDevice\fP ()\fC [protected]\fP"

.PP
Retourne le Nom du Driver simulé\&. \fBRenvoie:\fP
.RS 4
AnsiString AValue : le Nom du Driver simulé\&. 
.RE
.PP

.SS "T1DStringArray \fBSAlimentations::SepareAdressGpib\fP (AnsiStringStr_i)\fC [protected]\fP"

.PP
Renseigne les differents parametres de l'adresse GPIB /\&. \fBParamètres:\fP
.RS 4
\fIAnsiString\fP Str_i : chaine complete de l'adresse du driver simulé\&. 
.RE
.PP

.SS "T1DStringArray \fBSAlimentations::SepareTab\fP (AnsiStringStr_i, AnsiStringSeparateur_i)"

.PP
Separation de la chaine de caractere en fonction du separateur souhaité\&. \fBParamètres:\fP
.RS 4
\fIAnsiString\fP Str_i : Chaine de caractere\&. 
.br
\fIAnsiString\fP Separateur_i : separateur souhaité\&. 
.RE
.PP
\fBRenvoie:\fP
.RS 4
T1DStringArray : Tableau de String\&. Chaque chaine de caractere séparé est stocké dans un emplacement memoire du tableau\&. 
.RE
.PP

.SS "void \fBSAlimentations::SetActive\fP (boolAValue)\fC [protected]\fP"

.PP
Active ou Deactive le composant SAlimentation\&. \fBParamètres:\fP
.RS 4
\fIbool\fP AValue : Boolean activation ou non du composant\&. 
.RE
.PP

.SS "void \fBSAlimentations::setAdresseString\fP (AnsiStringAValue)\fC [protected]\fP"

.PP
\&.Renseigne la chaine complete de l'adresse du driver simulé\&. \fBParamètres:\fP
.RS 4
\fIAnsiString\fP AValue : chaine complete de l'adresse du driver simulé\&. 
.RE
.PP

.SS "void \fBSAlimentations::setCaption\fP (AnsiStringAValue)\fC [protected]\fP"

.PP
Renseigne le Alias du driver simulé\&. \fBParamètres:\fP
.RS 4
\fIAnsiString\fP AValue : Alias du drievr simulé\&. 
.RE
.PP

.SS "void \fBSAlimentations::SetDeviceFind\fP (AnsiStringAValue)\fC [protected]\fP"

.PP
Recherche et Inialisation du type de driver simulé\&. \fBParamètres:\fP
.RS 4
\fIAnsiString\fP AValue : Nom du driver simulé recherché\&. 
.RE
.PP

.SS "void \fBSAlimentations::SetDeviceType\fP (SAlimEnumAValue)\fC [protected]\fP"

.PP
Recherche et Initialisation du type de driver simulé en fonction de la Liste des instruments d'alimentation possible de simulés\&. \fBParamètres:\fP
.RS 4
\fISAlimEnum\fP AValue : Liste des instruments d'alimentation possible de simulés\&. 
.RE
.PP

.SH "Documentation des données membres"
.PP 
.SS "__property AnsiString \fBSAlimentations::AdresseString\fP = {read = FAdresseString, write = FAdresseString}"

.PP
propriété AdresseString de la variable FAdresseString\&. /** 

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Alimentation à partir du code source\&.
